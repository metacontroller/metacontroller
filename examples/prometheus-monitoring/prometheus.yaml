apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  namespace: default
  labels:
    app: prometheus
spec:
  version: v2.28.1
  replicas: 1
  resources:
    requests:
      memory: 400Mi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  serviceMonitorSelector: {}
---
apiVersion: v1
kind: Service
metadata:
  name: metacontroller
  namespace: metacontroller
  labels:
    app.kubernetes.io/name: metacontroller
spec:
  ports:
    - port: 9999
      name: http
      targetPort: 9999
  selector:
    app.kubernetes.io/name: metacontroller
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: metacontroller
  namespace: default
  labels:
    app.kubernetes.io/name: metacontroller
spec:
  endpoints:
    - interval: 5s
      port: http
  selector:
    matchLabels:
      app.kubernetes.io/name: metacontroller
  namespaceSelector:
    matchNames:
      - metacontroller
