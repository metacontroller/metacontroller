rbac:
  create: true

image:
  repository: metacontrollerio/metacontroller
  pullPolicy: IfNotPresent
  tag: "dev"

imagePullSecrets: []
nameOverride: "metacontroller"
namespaceOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Command which is used to start metacontroller
command: "/usr/bin/metacontroller"

# Command arguments which are used to start metacontroller
commandArgs:
  - --zap-log-level=4
  - --discovery-interval=20s
  - --cache-flush-interval=30m

# The name of the PriorityClass that will be assigned to metacontroller
priorityClassName: ""

clusterRole:
  aggregationRule: {}
  rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"

replicas: 1

# podDisruptionBudget which can be enabled when running more than one replica
podDisruptionBudget: {}
  # minAvailable: 1
  # maxUnavailable: 0

service:
  enabled: true
  ports:
    - name: "metrics"
      port: 9999
      protocol: "TCP"
      targetPort: 9999
