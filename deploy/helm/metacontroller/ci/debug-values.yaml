rbac:
  create: true

image:
  repository: metacontrollerio/metacontroller
  pullPolicy: IfNotPresent
  tag: "debug"

imagePullSecrets: []
nameOverride: ""
namespaceOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

zap: {}
  # logLevel: 4
  # devel: "production"
  # encoder: "json"
  # stacktraceLevel: "info"

# Command which is used to start metacontroller
command: "/dlv"

# Custom arguments which are used to start metacontroller
commandArgs:
  - --listen=:40000
  - --headless=true
  - --api-version=2
  - exec
  - /usr/bin/metacontroller
  - --
  - --zap-log-level=4
  - --discovery-interval=20s
  - --zap-devel=true

# How often to refresh discovery cache to pick up newly-installed resources
discoveryInterval: 20s

# How often to flush local caches and relist objects from the API server
cacheFlushInterval: 30m

# The name of the PriorityClass that will be assigned to metacontroller
priorityClassName: ""

clusterRole:
  aggregationRule: {}
  rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"

replicas: 1
