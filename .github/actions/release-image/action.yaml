name: 'Release metacontroller image'
description: 'Release metacontroller image'
inputs:
  name:
    description: 'Name of the image'
    required: true
  latest:
    description: 'Tag as latest?'
    required: false
    default: 'false'
  suffix:
    description: 'The suffix for this image'
    required: false
    default: ''
  dockerFilePath:
    description: 'Path to the dockerfile to build'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: rlespinasse/github-slug-action@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Login to github registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: '[${{ inputs.name }}] Docker metainformations'
      id: docker_meta_distroless
      uses: docker/metadata-action@v3
      with:
        images: metacontrollerio/metacontroller,ghcr.io/metacontroller/metacontroller # list of Docker images to use as base name for tags
        flavor: |
          latest=${{ inputs.latest }}
          prefix=
          suffix=${{ inputs.suffix }}
    - name: '[${{ inputs.name }}] Build and push'
      id: docker_build_distroless
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ inputs.dockerFilePath }}
        platforms: linux/amd64,linux/arm64,linux/arm
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta_distroless.outputs.tags }}
        labels: ${{ steps.docker_meta_distroless.outputs.labels }}
        build-args: |
          TAG=${{ env.GITHUB_REF_SLUG }}