---
name: Test / Release
on: [push, pull_request]
jobs:
  tests:
    runs-on: ubuntu-20.04
    name: Tests
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '5'
    - name: Run unit & integration tests
      shell: bash
      run: DOCKER_BUILDKIT=1 docker build -o ./tmp -t metacontroller:test -f Dockerfile.test .
    - name: coverage-unit
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./tmp/unit-coverage.out
        flags: unit
        fail_ci_if_error: true # optional (default = false)
    - name: coverage-integration
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./tmp/integration-coverage.out
        flags: integration
        fail_ci_if_error: true # optional (default = false)
  e2etests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
#         - {version: '1.11', kind: "v0.7.0", image: 'kindest/node:v1.11.10@sha256:e6f3dade95b7cb74081c5b9f3291aaaa6026a90a977e0b990778b6adc9ea6248', crd_version: 'v1beta1' }
         - {version: '1.12', kind: "v0.8.1", image: 'kindest/node:v1.12.10@sha256:faeb82453af2f9373447bb63f50bae02b8020968e0889c7fa308e19b348916cb', crd_version: 'v1beta1' }
         - {version: '1.13', kind: "v0.9.0", image: 'kindest/node:v1.13.12@sha256:1c1a48c2bfcbae4d5f4fa4310b5ed10756facad0b7a2ca93c7a4b5bae5db29f5', crd_version: 'v1beta1' }
         - {version: '1.14', kind: "v0.10.0", image: 'kindest/node:v1.14.10@sha256:3fbed72bcac108055e46e7b4091eb6858ad628ec51bf693c21f5ec34578f6180', crd_version: 'v1beta1' }
         - {version: '1.15', kind: "v0.10.0", image: 'kindest/node:v1.15.12@sha256:67181f94f0b3072fb56509107b380e38c55e23bf60e6f052fbd8052d26052fb5', crd_version: 'v1beta1' }
         - {version: '1.16', kind: "v0.10.0", image: 'kindest/node:v1.16.15@sha256:c10a63a5bda231c0a379bf91aebf8ad3c79146daca59db816fb963f731852a99', crd_version: 'v1' }
         - {version: '1.17', kind: "v0.10.0", image: 'kindest/node:v1.17.17@sha256:7b6369d27eee99c7a85c48ffd60e11412dc3f373658bc59b7f4d530b7056823e', crd_version: 'v1' }
         - {version: '1.18', kind: "v0.10.0", image: 'kindest/node:v1.18.15@sha256:5c1b980c4d0e0e8e7eb9f36f7df525d079a96169c8a8f20d8bd108c0d0889cc4', crd_version: 'v1' }
         - {version: '1.19', kind: "v0.10.0", image: 'kindest/node:v1.19.7@sha256:a70639454e97a4b733f9d9b67e12c01f6b0297449d5b9cbbef87473458e26dca', crd_version: 'v1' }
         - {version: '1.20', kind: "v0.10.0", image: 'kindest/node:v1.20.2@sha256:8f7ea6e7642c0da54f04a7ee10431549c0257315b3a634f6ef2fecaaedb19bab', crd_version: 'v1' }
    name: k8s ${{ matrix.configuration.version }}
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '5'
    - name: build local Image
      run: docker build -t metacontrollerio/metacontroller:dev .
    - name: setup kind
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: ${{ matrix.configuration.kind }}
        image: ${{ matrix.configuration.image }}
    - name: Load metacontroller image
      run: |
        kind load docker-image metacontrollerio/metacontroller:dev
    - name: Replace CRD mnifests to v1beta1
      if: ${{ matrix.configuration.crd_version == 'v1beta1' }}
      run: |
        sed -i 's/crds-v1/crds-v1beta1/' manifests/production/kustomization.yaml
        for file in examples/**/*.yaml; do sed -i 's/apiextensions.k8s.io\/v1/apiextensions.k8s.io\/v1beta1/g' $file; done
    - name: Apply metacontroller manifests
      run: |
        kubectl apply -k manifests/dev
        sleep 20s
        kubectl get pods -n metacontroller
    - name: Run e2e tests
      run: |
        cd examples
        ./test.sh --ignore catset --crd_version ${{ matrix.configuration.crd_version }}
  release:
    if: github.ref == 'refs/heads/master'
    name: Release - build/push docker and create tag
    runs-on: ubuntu-20.04
    needs: ['tests', 'e2etests']
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '13.8.0'
    - name: Install dependencies
      run: npm install ci
    - name: Release
      env:
        GH_TOKEN: ${{ secrets.PAT }}
      run: |
        npm install @semantic-release/git @semantic-release/changelog @google/semantic-release-replace-plugin -D
        npx semantic-release
