---
name: Static Cheks
on: [pull_request_target]
jobs:
  go-static-checks:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        configuration:
        - {check: 'sec', flags: '-exclude-dir=examples -exclude-dir=test -exclude=G104'}
        - {check: 'imports', flags: '-exclude-dir=examples -exclude-dir=test'}
        - {check: 'vet', flags: ''}
        - {check: 'fmt', flags: ''}
#        - {check: 'shadow', flags: ''}
#        - {check: 'errcheck', flags: ''}
        - {check: 'staticcheck', flags: '-checks "-ST1005"'}
    name: go ${{ matrix.configuration.check }}
    env:
      GO111MODULE: on
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: ${{ matrix.configuration.check }}
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: ${{ matrix.configuration.flags }}
  go-logcheck:
    runs-on: ubuntu-20.04
    env:
      GO111MODULE: on
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.2' # The Go version to download (if necessary) and use.
      - run: |
          go get k8s.io/klog/hack/tools/logcheck@latest
          go get k8s.io/client-go/rest@v0.17.17
          go get golang.org/x/oauth2/internal@v0.0.0-20190604053449-0f29369cfe45
          go install k8s.io/klog/hack/tools/logcheck@latest
      - run: logcheck ./...
  docker-linters:
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Build local image
      run: docker build -t metacontrollerio/metacontroller:lint-${{ github.sha }} .
    - name: Lint docker image
      uses: Azure/container-scan@v0
      with:
        image-name: metacontrollerio/metacontroller:lint-${{ github.sha }}
