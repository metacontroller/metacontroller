---
name: Test and Release (if on master)
on: [push, pull_request]
jobs:
  tests:
    runs-on: ubuntu-18.04
    name: Tests
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Run unit & integration tests
        shell: bash
        run: docker build -t metacontroller:test -f Dockerfile.test .
  docker-linters:
    runs-on: ubuntu-18.04
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: build local Image
      run: docker build -t metacontrollerio/metacontroller:lint .
    - name: Lint docker image
      uses: Azure/container-scan@v0
      with:
        image-name: metacontrollerio/metacontroller:lint
  go-sec:
    runs-on: ubuntu-18.04
    env:
      GO111MODULE: on
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: sec
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: "-exclude-dir=examples -exclude-dir=test -exclude=G104"
  # go-shadow:
  #   runs-on: ubuntu-18.04
  #   env:
  #     GO111MODULE: on
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v2
  #   - name: check
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: shadow
  #       token: ${{ secrets.GITHUB_TOKEN }}
  go-imports:
    runs-on: ubuntu-18.04
    env:
      GO111MODULE: on
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: imports
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: "-exclude-dir=examples -exclude-dir=test"
  # go-errcheck:
  #   runs-on: ubuntu-18.04
  #   env:
  #     GO111MODULE: on
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v2
  #   - name: check
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: errcheck
  #       token: ${{ secrets.GITHUB_TOKEN }}
  go-vet:
    runs-on: ubuntu-18.04
    env:
      GO111MODULE: on
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: vet
        token: ${{ secrets.GITHUB_TOKEN }}
  go-fmt:
    runs-on: ubuntu-18.04
    env:
      GO111MODULE: on
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: fmt
        token: ${{ secrets.GITHUB_TOKEN }}
  # go-staticcheck:
  #   runs-on: ubuntu-18.04
  #   env:
  #     GO111MODULE: on
  #   steps:
  #   - name: checkout
  #     uses: actions/checkout@v2
  #   - name: check
  #     uses: grandcolline/golang-github-actions@v1.1.0
  #     with:
  #       run: staticcheck
  #       token: ${{ secrets.GITHUB_TOKEN }}
  release:
    name: Release
    runs-on: ubuntu-18.04
    needs: ['tests']
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13.8.0
      - name: Install dependencies
        run: npm install ci
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          npm install @semantic-release/git @semantic-release/changelog @google/semantic-release-replace-plugin -D
          npx semantic-release
